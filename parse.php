<?php

parseRfcHtmlDocument("rfc2616-sec10.html");

// -------------------------------------------------------------------------

function parseRfcHtmlDocument($filename)
{
	$dom = new DOMDocument;
	$dom->loadHTMLFile($filename);

	// Just look for the <h3> elements, and then their peers
	$statuses = array();
	$items = $dom->getElementsByTagName('h3');
	for ($i = 0; $i < $items->length; $i++)
	{
		$explanation = "";
		
		list($major, $minor, $rev, $status, $description) = sscanf($items->item($i)->nodeValue, "%d.%d.%d %d %[^$]s");
		
		// If we fail to parse, it's probably a section thing
		if($status == 0)
		{
			// TODO: could actually make a section feature for this
			// 10.1 Informational 1xx
			// 10.2 Successful 2xx
			// 10.3 Redirection 3xx
			// 10.4 Client Error 4xx
			// 10.5 Server Error 5xx
			//print("" . $items->item($i)->nodeValue . "\n");
			continue;
		}

		$p = $items->item($i)->nextSibling;
		while($p != null)
		{
			if(strlen($p->nodeValue) > 1)
			{
				// TODO: consider capturing the document as-is ("<p>...</p>", instead of text value)
				$explanation .= $p->nodeValue;
			}
			$p = $p->nextSibling;

			// HACK: if the next node is the same as the original sibling (h3), bail
			if($p->nodeName == $items->item($i)->nodeName)
				$p = null;
		}
	
		$result = array("status" => $status, "description" => $description, "explanation" => $explanation);
		$statuses[] = $result;
	}

	foreach($statuses as $status)
	{
		// JSON/dictionary object
	
		// Write the full page, including template/header
		generateHtmlPage($status);
	
		// Write the cURL version page
		generateCurlPage($status);
	}
	
	generateLimonadeRoutes($statuses);
}

// -------------------------------------------------------------------------

function generateHtmlPage($status)
{
	$filename = sprintf("./web/pages/%d.html.php", $status["status"]);
	$fp = fopen($filename, "w");
	
	fwrite($fp, sprintf("<html><head><title>HTTP Code: %d</title>", $status["status"]));
	// bootstrap.min.css
	// bootstrap.min.js
	fwrite($fp, "<link href=\"/lib/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\" media=\"screen\">");
	fwrite($fp, "</head><body>");
	fwrite($fp, sprintf("<h1>%d: %s</h1>", $status["status"], $status["description"]));
	fwrite($fp, sprintf("<p><pre>%s</pre></p>", $status["explanation"]));
	// <script src="http://code.jquery.com/jquery-latest.js"></script>
    // <script src="lib/bootstrap/js/bootstrap.min.js"></script>
	fwrite($fp, "</body></html>");
	fclose($fp);
}

// -------------------------------------------------------------------------

function generateCurlPage($status)
{
	$filename = sprintf("./web/pages/%d.curl.php", $status["status"]);
	$fp = fopen($filename, "w");
	fwrite($fp, sprintf("%d: %s\n%s", $status["status"], $status["description"], $status["explanation"]));
	fclose($fp);
}

// -------------------------------------------------------------------------

function generateLimonadeRoutes($statuses)
{
	// Create limonade_routes.php
	
	$filename = sprintf("./web/pages/limonade_routes.php", $status["status"]);
	$fp = fopen($filename, "w");
	fwrite($fp, "<?php\n\n/* THIS FILE IS GENERATED BY PARSE.PHP - DO NOT MODIFY! */\n\n");
	fwrite($fp, "$" . "pages = array(\n");
	foreach($statuses as $status)
	{
		fwrite($fp, sprintf("  %d,\n", $status["status"]));
		/*
			dispatch('/NNN', 'page_NNN');
		    function page_NNN()
		    {
		        return 'Hello world!';
		    }
		*/
		//$dispatch = sprintf("dispatch('/%d', 'page_%d');\n", $status["status"], $status["status"]);
		//fwrite($fp, $dispatch);
	}
	fwrite($fp, ");\n\n");
	fclose($fp);

}